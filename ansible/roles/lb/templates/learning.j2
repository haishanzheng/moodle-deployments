upstream {{ NGINX_SERVER_NAME }} {
    ip_hash;
    {% for ipaddress in groups['web_server'] %}
    server {{ ipaddress }};
    {% endfor %}    
}

proxy_cache_path /var/cache/nginxcache levels=1:2 keys_zone=nginxcache:500m inactive=5d max_size=20g;

server {

    listen 80;
    listen [::]:80;

    server_name {{ NGINX_SERVER_NAME }};

    client_max_body_size 2048m;
    proxy_read_timeout 300s;
    client_body_buffer_size 128k;

    if ($request_method !~ ^(GET|HEAD|POST)$) {
        return 444;
    }

    location / {
        proxy_cache nginxcache;

        proxy_pass http://{{ NGINX_SERVER_NAME }};
        # proxy_set_header Host            $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header Client-IP "";
        proxy_hide_header X-Frame-Options;
    }

{% if HAS_CDN %}
    include /etc/nginx/sites-available/learning-cdn_real_ip.conf;
{% endif %}

    add_header X-Cache-Status $upstream_cache_status;
    add_header X-Frame-Options  sameorigin;

    access_log /var/log/nginx/access.log;

{% if HAS_SSL_CERTIFICATE %}
    listen 443 ssl http2; # managed by Certbot
    listen [::]:443 ipv6only=on ssl http2;
    ssl_certificate /etc/letsencrypt/live/{{ NGINX_SERVER_NAME }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ NGINX_SERVER_NAME }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    } # managed by Certbot
{% endif %}

}
